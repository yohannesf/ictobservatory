# Generated by Django 4.1 on 2022-11-01 11:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Currency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("currency_label", models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name="FocusArea",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sn",
                    models.IntegerField(blank=True, unique=True, verbose_name="S/N"),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Focus Area")),
                ("abbreviation", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("last_update", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="Focus_Area_Created_By",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="Focus_Area_Updated_By",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["sn"],
            },
        ),
        migrations.CreateModel(
            name="Indicator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("indicator_number", models.CharField(max_length=50, unique=True)),
                (
                    "label",
                    models.CharField(
                        help_text="Enter the indicator here",
                        max_length=255,
                        verbose_name="Indicator",
                    ),
                ),
                (
                    "data_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Currency"),
                            (1, "Whole Number"),
                            (2, "Decimal"),
                            (3, "Percentage"),
                            (4, "Text"),
                            (5, "Select (Yes/No)"),
                            (6, "Text Area"),
                            (7, "URL"),
                            (8, "Email"),
                            (9, "Date"),
                        ]
                    ),
                ),
                (
                    "choices",
                    models.TextField(
                        blank=True,
                        help_text="if Data Type is Select, fill in the option separated by commas. ex: Yes, No or Male, Female",
                    ),
                ),
                ("definition", models.TextField()),
                ("source", models.CharField(blank=True, max_length=10)),
                (
                    "indicator_type",
                    models.CharField(
                        choices=[("Core", "Core"), ("Extended", "Extended")],
                        default="Core",
                        max_length=8,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Archived", "Archived")],
                        default="Active",
                        max_length=10,
                    ),
                ),
                (
                    "required",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        verbose_name="Is required ? ",
                    ),
                ),
                (
                    "attachment",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        verbose_name="Has attachment ? ",
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        blank=True, max_length=225, null=True, unique=True
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("last_update", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="Indicator_Created_By",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "focus_area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="portaldata.focusarea",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="Indicator_Updated_By",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["indicator_number"],
            },
        ),
        migrations.CreateModel(
            name="MemberState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("member_state", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "ordering": ["member_state"],
            },
        ),
        migrations.CreateModel(
            name="Organisation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("organisation_name", models.CharField(max_length=255)),
                ("description", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="SystemUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("phone", models.CharField(max_length=255)),
                (
                    "user_group",
                    models.CharField(
                        choices=[
                            ("M", "Member State"),
                            ("O", "Organization"),
                            ("S", "SADC"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[("A", "Administrator"), ("F", "Focal Point Person")],
                        max_length=1,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ExchangeRateData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("exchange_rate", models.FloatField()),
                ("exchange_rate_date", models.DateField()),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="portaldata.currency",
                    ),
                ),
                (
                    "member_state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="portaldata.memberstate",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="currency",
            name="member_state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="portaldata.memberstate"
            ),
        ),
        migrations.CreateModel(
            name="AssignedIndicator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "assigned_to_member_state",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="portaldata.memberstate",
                    ),
                ),
                (
                    "assigned_to_organisation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="portaldata.organisation",
                    ),
                ),
                (
                    "indicator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="portaldata.indicator",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IndicatorData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reporting_year", models.CharField(max_length=6)),
                ("value", models.TextField(blank=True, verbose_name="Data")),
                ("comments", models.TextField(blank=True)),
                ("attachment", models.FileField(blank=True, null=True, upload_to="")),
                (
                    "submitted",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        verbose_name="Is Submitted ? ",
                    ),
                ),
                (
                    "validated",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        verbose_name="Is validated ? ",
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("last_update", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="Data_Created_By",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "indicator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="portaldata.indicator",
                    ),
                ),
                (
                    "member_state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="portaldata.memberstate",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="Data_Last_Updated_By",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("reporting_year", "indicator", "member_state")},
            },
        ),
    ]
